# 服务IP
server.ip=127.0.0.1
# 访问端口
server.port=18686
# 会话过期时间(秒)
server.servlet.session.timeout=1800
# 访问服务的路径，‘/’ -> http://${server.ip}:${server.port}/
server.servlet.context-path=/
# 启用CDN加速访问静态资源
info.app.enableCDN=false

#web
# 机器的唯一编号（单机部署则填默认值; 部署集群时, 要保证编号在集群中唯一）
dbsyncer.web.worker.id=1
# 定时任务线程数
dbsyncer.web.scheduler.pool-size=8

#parser
# *********************** 通用执行器配置 ***********************
# [GeneralBufferActuator]线程数
dbsyncer.parser.general.thread-core-size=8
# [GeneralBufferActuator]线程池队列
dbsyncer.parser.general.thread-queue-capacity=64
# [GeneralBufferActuator]单次执行任务数
dbsyncer.parser.general.buffer-writer-count=100
# [GeneralBufferActuator]每次消费缓存队列的任务数
dbsyncer.parser.general.buffer-pull-count=1000
# [GeneralBufferActuator]缓存队列容量
dbsyncer.parser.general.buffer-queue-capacity=60000
# [GeneralBufferActuator]定时消费缓存队列间隔(毫秒)
dbsyncer.parser.general.buffer-period-millisecond=300
# *********************** 表执行器配置 ***********************
# 每个驱动最多可分配的表执行器个数
dbsyncer.parser.table.group.max-buffer-actuator-size=10
# [TableGroupBufferActuator]线程数
dbsyncer.parser.table.group.thread-core-size=2
# [TableGroupBufferActuator]线程池队列
dbsyncer.parser.table.group.thread-queue-capacity=16
# [TableGroupBufferActuator]单次执行任务数
dbsyncer.parser.table.group.buffer-writer-count=100
# [TableGroupBufferActuator]每次消费缓存队列的任务数
dbsyncer.parser.table.group.buffer-pull-count=1000
# [TableGroupBufferActuator]缓存队列容量
dbsyncer.parser.table.group.buffer-queue-capacity=10000
# [TableGroupBufferActuator]定时消费缓存队列间隔(毫秒)
dbsyncer.parser.table.group.buffer-period-millisecond=300

#storage
# 是否使用MySQL存储配置（false-关闭; true-开启）
# false: 保存磁盘/data/config(驱动配置)|data(按驱动分别存储增量数据)|log(系统日志)}
dbsyncer.storage.support.mysql.enabled=false
dbsyncer.storage.support.mysql.config.url=jdbc:mysql://127.0.0.1:3306/dbsyncer?rewriteBatchedStatements=true&seUnicode=true&characterEncoding=UTF8&serverTimezone=Asia/Shanghai&useSSL=false&verifyServerCertificate=false&autoReconnect=true
dbsyncer.storage.support.mysql.config.username=root
dbsyncer.storage.support.mysql.config.password=123
# [StorageBufferActuator]线程数
dbsyncer.storage.thread-core-size=4
# [StorageBufferActuator]线程池队列
dbsyncer.storage.thread-queue-capacity=32
# [StorageBufferActuator]单次执行任务数
dbsyncer.storage.buffer-writer-count=100
# [StorageBufferActuator]每次消费缓存队列的任务数
dbsyncer.storage.buffer-pull-count=1000
# [StorageBufferActuator]缓存队列容量
dbsyncer.storage.buffer-queue-capacity=50000
# [StorageBufferActuator]定时消费缓存队列间隔(毫秒)
dbsyncer.storage.buffer-period-millisecond=300
# 是否记录全量数据（false-关闭; true-开启）
dbsyncer.storage.write.full.enabled=false
# 是否记录同步成功数据（false-关闭; true-开启）
dbsyncer.storage.write-success=true
# 是否记录同步失败数据（false-关闭; true-开启）
dbsyncer.storage.write-fail=true
# 记录同步失败日志最大长度
dbsyncer.storage.max-error-length=2048

#plugin
# 是否开启邮箱通知功能（false-关闭; true-开启）
# 进入Web管理页面：配置 >> 用户管理，给用户配置邮箱即可接受通知消息
# 默认间隔10分钟触发一次通知消息，满足发通知条件：1、驱动有失败数据 2、手动停止驱动
dbsyncer.plugin.notify.mail.enabled=false
# 发邮箱的账号，示例：836391306@qq.com
dbsyncer.plugin.notify.mail.username=your mail username
# 发邮件的Code（注：不是邮箱密码），示例：wqoxxxxxxdflbbig
dbsyncer.plugin.notify.mail.password=your mail authorization code

#All < Trace < Debug < Info < Warn < Error < Fatal < OFF
logging.level.root=info